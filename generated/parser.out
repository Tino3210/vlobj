Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ELSE

Grammar

Rule 0     S' -> programme
Rule 1     programme -> statement
Rule 2     programme -> statement DOTCOMMA programme
Rule 3     statement -> assignation
Rule 4     statement -> structure
Rule 5     statement -> square
Rule 6     statement -> pyramid
Rule 7     statement -> randomShape
Rule 8     statement -> color
Rule 9     statement -> expression
Rule 10    assignation -> IDENTIFIER EQUALS expression
Rule 11    randomShape -> XS PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
Rule 12    randomShape -> XS PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END
Rule 13    randomnNumber -> XD PAR_START NUMBER COMMA NUMBER PAR_END
Rule 14    square -> SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
Rule 15    square -> SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END
Rule 16    pyramid -> PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
Rule 17    pyramid -> PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END
Rule 18    color -> COLOR PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
Rule 19    structure -> WHILE PAR_START condition PAR_END ACOL_START programme ACOL_END
Rule 20    structure -> IF PAR_START condition PAR_END ACOL_START programme ACOL_END
Rule 21    condition -> expression CONDITION expression
Rule 22    expression -> IDENTIFIER ADD_OP UNDERSCORE ADD_OP
Rule 23    expression -> expression ADD_OP expression
Rule 24    expression -> expression MUL_OP expression
Rule 25    expression -> ADD_OP expression
Rule 26    expression -> NUMBER
Rule 27    expression -> STRING
Rule 28    expression -> IDENTIFIER

Terminals, with rules where they appear

ACOL_END             : 19 20
ACOL_START           : 19 20
ADD_OP               : 22 22 23 25
COLOR                : 18
COMMA                : 11 11 11 12 12 12 12 13 14 14 14 15 15 15 15 16 16 16 17 17 17 17 18 18 18
CONDITION            : 21
DOTCOMMA             : 2
ELSE                 : 
EQUALS               : 10
IDENTIFIER           : 10 22 28
IF                   : 20
MUL_OP               : 24
NUMBER               : 13 13 26
PAR_END              : 11 12 13 14 15 16 17 18 19 20
PAR_START            : 11 12 13 14 15 16 17 18 19 20
PYRAMID              : 16 17
SQUARE               : 14 15
STRING               : 27
UNDERSCORE           : 22
WHILE                : 19
XD                   : 13
XS                   : 11 12
error                : 

Nonterminals, with rules where they appear

assignation          : 3
color                : 8
condition            : 19 20
expression           : 9 10 11 11 11 11 12 12 12 12 12 14 14 14 14 15 15 15 15 15 16 16 16 16 17 17 17 17 17 18 18 18 18 21 21 23 23 24 24 25
programme            : 2 19 20 0
pyramid              : 6
randomShape          : 7
randomnNumber        : 
square               : 5
statement            : 1 2
structure            : 4

Parsing method: LALR

state 0

    (0) S' -> . programme
    (1) programme -> . statement
    (2) programme -> . statement DOTCOMMA programme
    (3) statement -> . assignation
    (4) statement -> . structure
    (5) statement -> . square
    (6) statement -> . pyramid
    (7) statement -> . randomShape
    (8) statement -> . color
    (9) statement -> . expression
    (10) assignation -> . IDENTIFIER EQUALS expression
    (19) structure -> . WHILE PAR_START condition PAR_END ACOL_START programme ACOL_END
    (20) structure -> . IF PAR_START condition PAR_END ACOL_START programme ACOL_END
    (14) square -> . SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
    (15) square -> . SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END
    (16) pyramid -> . PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
    (17) pyramid -> . PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END
    (11) randomShape -> . XS PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
    (12) randomShape -> . XS PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END
    (18) color -> . COLOR PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    SQUARE          shift and go to state 13
    PYRAMID         shift and go to state 14
    XS              shift and go to state 15
    COLOR           shift and go to state 16
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    programme                      shift and go to state 1
    statement                      shift and go to state 2
    assignation                    shift and go to state 3
    structure                      shift and go to state 4
    square                         shift and go to state 5
    pyramid                        shift and go to state 6
    randomShape                    shift and go to state 7
    color                          shift and go to state 8
    expression                     shift and go to state 9

state 1

    (0) S' -> programme .



state 2

    (1) programme -> statement .
    (2) programme -> statement . DOTCOMMA programme

    $end            reduce using rule 1 (programme -> statement .)
    ACOL_END        reduce using rule 1 (programme -> statement .)
    DOTCOMMA        shift and go to state 20


state 3

    (3) statement -> assignation .

    DOTCOMMA        reduce using rule 3 (statement -> assignation .)
    $end            reduce using rule 3 (statement -> assignation .)
    ACOL_END        reduce using rule 3 (statement -> assignation .)


state 4

    (4) statement -> structure .

    DOTCOMMA        reduce using rule 4 (statement -> structure .)
    $end            reduce using rule 4 (statement -> structure .)
    ACOL_END        reduce using rule 4 (statement -> structure .)


state 5

    (5) statement -> square .

    DOTCOMMA        reduce using rule 5 (statement -> square .)
    $end            reduce using rule 5 (statement -> square .)
    ACOL_END        reduce using rule 5 (statement -> square .)


state 6

    (6) statement -> pyramid .

    DOTCOMMA        reduce using rule 6 (statement -> pyramid .)
    $end            reduce using rule 6 (statement -> pyramid .)
    ACOL_END        reduce using rule 6 (statement -> pyramid .)


state 7

    (7) statement -> randomShape .

    DOTCOMMA        reduce using rule 7 (statement -> randomShape .)
    $end            reduce using rule 7 (statement -> randomShape .)
    ACOL_END        reduce using rule 7 (statement -> randomShape .)


state 8

    (8) statement -> color .

    DOTCOMMA        reduce using rule 8 (statement -> color .)
    $end            reduce using rule 8 (statement -> color .)
    ACOL_END        reduce using rule 8 (statement -> color .)


state 9

    (9) statement -> expression .
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    DOTCOMMA        reduce using rule 9 (statement -> expression .)
    $end            reduce using rule 9 (statement -> expression .)
    ACOL_END        reduce using rule 9 (statement -> expression .)
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 10

    (10) assignation -> IDENTIFIER . EQUALS expression
    (22) expression -> IDENTIFIER . ADD_OP UNDERSCORE ADD_OP
    (28) expression -> IDENTIFIER .

  ! shift/reduce conflict for ADD_OP resolved as shift
    EQUALS          shift and go to state 23
    ADD_OP          shift and go to state 24
    MUL_OP          reduce using rule 28 (expression -> IDENTIFIER .)
    DOTCOMMA        reduce using rule 28 (expression -> IDENTIFIER .)
    $end            reduce using rule 28 (expression -> IDENTIFIER .)
    ACOL_END        reduce using rule 28 (expression -> IDENTIFIER .)

  ! ADD_OP          [ reduce using rule 28 (expression -> IDENTIFIER .) ]


state 11

    (19) structure -> WHILE . PAR_START condition PAR_END ACOL_START programme ACOL_END

    PAR_START       shift and go to state 25


state 12

    (20) structure -> IF . PAR_START condition PAR_END ACOL_START programme ACOL_END

    PAR_START       shift and go to state 26


state 13

    (14) square -> SQUARE . PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
    (15) square -> SQUARE . PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END

    PAR_START       shift and go to state 27


state 14

    (16) pyramid -> PYRAMID . PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
    (17) pyramid -> PYRAMID . PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END

    PAR_START       shift and go to state 28


state 15

    (11) randomShape -> XS . PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
    (12) randomShape -> XS . PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END

    PAR_START       shift and go to state 29


state 16

    (18) color -> COLOR . PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END

    PAR_START       shift and go to state 30


state 17

    (25) expression -> ADD_OP . expression
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 31

state 18

    (26) expression -> NUMBER .

    ADD_OP          reduce using rule 26 (expression -> NUMBER .)
    MUL_OP          reduce using rule 26 (expression -> NUMBER .)
    DOTCOMMA        reduce using rule 26 (expression -> NUMBER .)
    $end            reduce using rule 26 (expression -> NUMBER .)
    ACOL_END        reduce using rule 26 (expression -> NUMBER .)
    CONDITION       reduce using rule 26 (expression -> NUMBER .)
    COMMA           reduce using rule 26 (expression -> NUMBER .)
    PAR_END         reduce using rule 26 (expression -> NUMBER .)


state 19

    (27) expression -> STRING .

    ADD_OP          reduce using rule 27 (expression -> STRING .)
    MUL_OP          reduce using rule 27 (expression -> STRING .)
    DOTCOMMA        reduce using rule 27 (expression -> STRING .)
    $end            reduce using rule 27 (expression -> STRING .)
    ACOL_END        reduce using rule 27 (expression -> STRING .)
    CONDITION       reduce using rule 27 (expression -> STRING .)
    COMMA           reduce using rule 27 (expression -> STRING .)
    PAR_END         reduce using rule 27 (expression -> STRING .)


state 20

    (2) programme -> statement DOTCOMMA . programme
    (1) programme -> . statement
    (2) programme -> . statement DOTCOMMA programme
    (3) statement -> . assignation
    (4) statement -> . structure
    (5) statement -> . square
    (6) statement -> . pyramid
    (7) statement -> . randomShape
    (8) statement -> . color
    (9) statement -> . expression
    (10) assignation -> . IDENTIFIER EQUALS expression
    (19) structure -> . WHILE PAR_START condition PAR_END ACOL_START programme ACOL_END
    (20) structure -> . IF PAR_START condition PAR_END ACOL_START programme ACOL_END
    (14) square -> . SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
    (15) square -> . SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END
    (16) pyramid -> . PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
    (17) pyramid -> . PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END
    (11) randomShape -> . XS PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
    (12) randomShape -> . XS PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END
    (18) color -> . COLOR PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    SQUARE          shift and go to state 13
    PYRAMID         shift and go to state 14
    XS              shift and go to state 15
    COLOR           shift and go to state 16
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    statement                      shift and go to state 2
    programme                      shift and go to state 33
    assignation                    shift and go to state 3
    structure                      shift and go to state 4
    square                         shift and go to state 5
    pyramid                        shift and go to state 6
    randomShape                    shift and go to state 7
    color                          shift and go to state 8
    expression                     shift and go to state 9

state 21

    (23) expression -> expression ADD_OP . expression
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 34

state 22

    (24) expression -> expression MUL_OP . expression
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 35

state 23

    (10) assignation -> IDENTIFIER EQUALS . expression
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 36

state 24

    (22) expression -> IDENTIFIER ADD_OP . UNDERSCORE ADD_OP

    UNDERSCORE      shift and go to state 37


state 25

    (19) structure -> WHILE PAR_START . condition PAR_END ACOL_START programme ACOL_END
    (21) condition -> . expression CONDITION expression
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    condition                      shift and go to state 38
    expression                     shift and go to state 39

state 26

    (20) structure -> IF PAR_START . condition PAR_END ACOL_START programme ACOL_END
    (21) condition -> . expression CONDITION expression
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    condition                      shift and go to state 40
    expression                     shift and go to state 39

state 27

    (14) square -> SQUARE PAR_START . expression COMMA expression COMMA expression COMMA expression PAR_END
    (15) square -> SQUARE PAR_START . expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 41

state 28

    (16) pyramid -> PYRAMID PAR_START . expression COMMA expression COMMA expression COMMA expression PAR_END
    (17) pyramid -> PYRAMID PAR_START . expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 42

state 29

    (11) randomShape -> XS PAR_START . expression COMMA expression COMMA expression COMMA expression PAR_END
    (12) randomShape -> XS PAR_START . expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 43

state 30

    (18) color -> COLOR PAR_START . expression COMMA expression COMMA expression COMMA expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 44

state 31

    (25) expression -> ADD_OP expression .
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    ADD_OP          reduce using rule 25 (expression -> ADD_OP expression .)
    MUL_OP          reduce using rule 25 (expression -> ADD_OP expression .)
    DOTCOMMA        reduce using rule 25 (expression -> ADD_OP expression .)
    $end            reduce using rule 25 (expression -> ADD_OP expression .)
    ACOL_END        reduce using rule 25 (expression -> ADD_OP expression .)
    CONDITION       reduce using rule 25 (expression -> ADD_OP expression .)
    COMMA           reduce using rule 25 (expression -> ADD_OP expression .)
    PAR_END         reduce using rule 25 (expression -> ADD_OP expression .)

  ! ADD_OP          [ shift and go to state 21 ]
  ! MUL_OP          [ shift and go to state 22 ]


state 32

    (22) expression -> IDENTIFIER . ADD_OP UNDERSCORE ADD_OP
    (28) expression -> IDENTIFIER .

  ! shift/reduce conflict for ADD_OP resolved as shift
    ADD_OP          shift and go to state 24
    MUL_OP          reduce using rule 28 (expression -> IDENTIFIER .)
    DOTCOMMA        reduce using rule 28 (expression -> IDENTIFIER .)
    $end            reduce using rule 28 (expression -> IDENTIFIER .)
    ACOL_END        reduce using rule 28 (expression -> IDENTIFIER .)
    CONDITION       reduce using rule 28 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 28 (expression -> IDENTIFIER .)
    PAR_END         reduce using rule 28 (expression -> IDENTIFIER .)

  ! ADD_OP          [ reduce using rule 28 (expression -> IDENTIFIER .) ]


state 33

    (2) programme -> statement DOTCOMMA programme .

    $end            reduce using rule 2 (programme -> statement DOTCOMMA programme .)
    ACOL_END        reduce using rule 2 (programme -> statement DOTCOMMA programme .)


state 34

    (23) expression -> expression ADD_OP expression .
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    ADD_OP          reduce using rule 23 (expression -> expression ADD_OP expression .)
    DOTCOMMA        reduce using rule 23 (expression -> expression ADD_OP expression .)
    $end            reduce using rule 23 (expression -> expression ADD_OP expression .)
    ACOL_END        reduce using rule 23 (expression -> expression ADD_OP expression .)
    CONDITION       reduce using rule 23 (expression -> expression ADD_OP expression .)
    COMMA           reduce using rule 23 (expression -> expression ADD_OP expression .)
    PAR_END         reduce using rule 23 (expression -> expression ADD_OP expression .)
    MUL_OP          shift and go to state 22

  ! MUL_OP          [ reduce using rule 23 (expression -> expression ADD_OP expression .) ]
  ! ADD_OP          [ shift and go to state 21 ]


state 35

    (24) expression -> expression MUL_OP expression .
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    ADD_OP          reduce using rule 24 (expression -> expression MUL_OP expression .)
    MUL_OP          reduce using rule 24 (expression -> expression MUL_OP expression .)
    DOTCOMMA        reduce using rule 24 (expression -> expression MUL_OP expression .)
    $end            reduce using rule 24 (expression -> expression MUL_OP expression .)
    ACOL_END        reduce using rule 24 (expression -> expression MUL_OP expression .)
    CONDITION       reduce using rule 24 (expression -> expression MUL_OP expression .)
    COMMA           reduce using rule 24 (expression -> expression MUL_OP expression .)
    PAR_END         reduce using rule 24 (expression -> expression MUL_OP expression .)

  ! ADD_OP          [ shift and go to state 21 ]
  ! MUL_OP          [ shift and go to state 22 ]


state 36

    (10) assignation -> IDENTIFIER EQUALS expression .
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    DOTCOMMA        reduce using rule 10 (assignation -> IDENTIFIER EQUALS expression .)
    $end            reduce using rule 10 (assignation -> IDENTIFIER EQUALS expression .)
    ACOL_END        reduce using rule 10 (assignation -> IDENTIFIER EQUALS expression .)
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 37

    (22) expression -> IDENTIFIER ADD_OP UNDERSCORE . ADD_OP

    ADD_OP          shift and go to state 45


state 38

    (19) structure -> WHILE PAR_START condition . PAR_END ACOL_START programme ACOL_END

    PAR_END         shift and go to state 46


state 39

    (21) condition -> expression . CONDITION expression
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    CONDITION       shift and go to state 47
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 40

    (20) structure -> IF PAR_START condition . PAR_END ACOL_START programme ACOL_END

    PAR_END         shift and go to state 48


state 41

    (14) square -> SQUARE PAR_START expression . COMMA expression COMMA expression COMMA expression PAR_END
    (15) square -> SQUARE PAR_START expression . COMMA expression COMMA expression COMMA expression COMMA expression PAR_END
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    COMMA           shift and go to state 49
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 42

    (16) pyramid -> PYRAMID PAR_START expression . COMMA expression COMMA expression COMMA expression PAR_END
    (17) pyramid -> PYRAMID PAR_START expression . COMMA expression COMMA expression COMMA expression COMMA expression PAR_END
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    COMMA           shift and go to state 50
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 43

    (11) randomShape -> XS PAR_START expression . COMMA expression COMMA expression COMMA expression PAR_END
    (12) randomShape -> XS PAR_START expression . COMMA expression COMMA expression COMMA expression COMMA expression PAR_END
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    COMMA           shift and go to state 51
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 44

    (18) color -> COLOR PAR_START expression . COMMA expression COMMA expression COMMA expression PAR_END
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    COMMA           shift and go to state 52
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 45

    (22) expression -> IDENTIFIER ADD_OP UNDERSCORE ADD_OP .

    ADD_OP          reduce using rule 22 (expression -> IDENTIFIER ADD_OP UNDERSCORE ADD_OP .)
    MUL_OP          reduce using rule 22 (expression -> IDENTIFIER ADD_OP UNDERSCORE ADD_OP .)
    DOTCOMMA        reduce using rule 22 (expression -> IDENTIFIER ADD_OP UNDERSCORE ADD_OP .)
    $end            reduce using rule 22 (expression -> IDENTIFIER ADD_OP UNDERSCORE ADD_OP .)
    ACOL_END        reduce using rule 22 (expression -> IDENTIFIER ADD_OP UNDERSCORE ADD_OP .)
    CONDITION       reduce using rule 22 (expression -> IDENTIFIER ADD_OP UNDERSCORE ADD_OP .)
    COMMA           reduce using rule 22 (expression -> IDENTIFIER ADD_OP UNDERSCORE ADD_OP .)
    PAR_END         reduce using rule 22 (expression -> IDENTIFIER ADD_OP UNDERSCORE ADD_OP .)


state 46

    (19) structure -> WHILE PAR_START condition PAR_END . ACOL_START programme ACOL_END

    ACOL_START      shift and go to state 53


state 47

    (21) condition -> expression CONDITION . expression
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 54

state 48

    (20) structure -> IF PAR_START condition PAR_END . ACOL_START programme ACOL_END

    ACOL_START      shift and go to state 55


state 49

    (14) square -> SQUARE PAR_START expression COMMA . expression COMMA expression COMMA expression PAR_END
    (15) square -> SQUARE PAR_START expression COMMA . expression COMMA expression COMMA expression COMMA expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 56

state 50

    (16) pyramid -> PYRAMID PAR_START expression COMMA . expression COMMA expression COMMA expression PAR_END
    (17) pyramid -> PYRAMID PAR_START expression COMMA . expression COMMA expression COMMA expression COMMA expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 57

state 51

    (11) randomShape -> XS PAR_START expression COMMA . expression COMMA expression COMMA expression PAR_END
    (12) randomShape -> XS PAR_START expression COMMA . expression COMMA expression COMMA expression COMMA expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 58

state 52

    (18) color -> COLOR PAR_START expression COMMA . expression COMMA expression COMMA expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 59

state 53

    (19) structure -> WHILE PAR_START condition PAR_END ACOL_START . programme ACOL_END
    (1) programme -> . statement
    (2) programme -> . statement DOTCOMMA programme
    (3) statement -> . assignation
    (4) statement -> . structure
    (5) statement -> . square
    (6) statement -> . pyramid
    (7) statement -> . randomShape
    (8) statement -> . color
    (9) statement -> . expression
    (10) assignation -> . IDENTIFIER EQUALS expression
    (19) structure -> . WHILE PAR_START condition PAR_END ACOL_START programme ACOL_END
    (20) structure -> . IF PAR_START condition PAR_END ACOL_START programme ACOL_END
    (14) square -> . SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
    (15) square -> . SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END
    (16) pyramid -> . PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
    (17) pyramid -> . PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END
    (11) randomShape -> . XS PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
    (12) randomShape -> . XS PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END
    (18) color -> . COLOR PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    SQUARE          shift and go to state 13
    PYRAMID         shift and go to state 14
    XS              shift and go to state 15
    COLOR           shift and go to state 16
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    programme                      shift and go to state 60
    statement                      shift and go to state 2
    assignation                    shift and go to state 3
    structure                      shift and go to state 4
    square                         shift and go to state 5
    pyramid                        shift and go to state 6
    randomShape                    shift and go to state 7
    color                          shift and go to state 8
    expression                     shift and go to state 9

state 54

    (21) condition -> expression CONDITION expression .
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    PAR_END         reduce using rule 21 (condition -> expression CONDITION expression .)
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 55

    (20) structure -> IF PAR_START condition PAR_END ACOL_START . programme ACOL_END
    (1) programme -> . statement
    (2) programme -> . statement DOTCOMMA programme
    (3) statement -> . assignation
    (4) statement -> . structure
    (5) statement -> . square
    (6) statement -> . pyramid
    (7) statement -> . randomShape
    (8) statement -> . color
    (9) statement -> . expression
    (10) assignation -> . IDENTIFIER EQUALS expression
    (19) structure -> . WHILE PAR_START condition PAR_END ACOL_START programme ACOL_END
    (20) structure -> . IF PAR_START condition PAR_END ACOL_START programme ACOL_END
    (14) square -> . SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
    (15) square -> . SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END
    (16) pyramid -> . PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
    (17) pyramid -> . PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END
    (11) randomShape -> . XS PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
    (12) randomShape -> . XS PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END
    (18) color -> . COLOR PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    SQUARE          shift and go to state 13
    PYRAMID         shift and go to state 14
    XS              shift and go to state 15
    COLOR           shift and go to state 16
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    programme                      shift and go to state 61
    statement                      shift and go to state 2
    assignation                    shift and go to state 3
    structure                      shift and go to state 4
    square                         shift and go to state 5
    pyramid                        shift and go to state 6
    randomShape                    shift and go to state 7
    color                          shift and go to state 8
    expression                     shift and go to state 9

state 56

    (14) square -> SQUARE PAR_START expression COMMA expression . COMMA expression COMMA expression PAR_END
    (15) square -> SQUARE PAR_START expression COMMA expression . COMMA expression COMMA expression COMMA expression PAR_END
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    COMMA           shift and go to state 62
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 57

    (16) pyramid -> PYRAMID PAR_START expression COMMA expression . COMMA expression COMMA expression PAR_END
    (17) pyramid -> PYRAMID PAR_START expression COMMA expression . COMMA expression COMMA expression COMMA expression PAR_END
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    COMMA           shift and go to state 63
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 58

    (11) randomShape -> XS PAR_START expression COMMA expression . COMMA expression COMMA expression PAR_END
    (12) randomShape -> XS PAR_START expression COMMA expression . COMMA expression COMMA expression COMMA expression PAR_END
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    COMMA           shift and go to state 64
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 59

    (18) color -> COLOR PAR_START expression COMMA expression . COMMA expression COMMA expression PAR_END
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    COMMA           shift and go to state 65
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 60

    (19) structure -> WHILE PAR_START condition PAR_END ACOL_START programme . ACOL_END

    ACOL_END        shift and go to state 66


state 61

    (20) structure -> IF PAR_START condition PAR_END ACOL_START programme . ACOL_END

    ACOL_END        shift and go to state 67


state 62

    (14) square -> SQUARE PAR_START expression COMMA expression COMMA . expression COMMA expression PAR_END
    (15) square -> SQUARE PAR_START expression COMMA expression COMMA . expression COMMA expression COMMA expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 68

state 63

    (16) pyramid -> PYRAMID PAR_START expression COMMA expression COMMA . expression COMMA expression PAR_END
    (17) pyramid -> PYRAMID PAR_START expression COMMA expression COMMA . expression COMMA expression COMMA expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 69

state 64

    (11) randomShape -> XS PAR_START expression COMMA expression COMMA . expression COMMA expression PAR_END
    (12) randomShape -> XS PAR_START expression COMMA expression COMMA . expression COMMA expression COMMA expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 70

state 65

    (18) color -> COLOR PAR_START expression COMMA expression COMMA . expression COMMA expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 71

state 66

    (19) structure -> WHILE PAR_START condition PAR_END ACOL_START programme ACOL_END .

    DOTCOMMA        reduce using rule 19 (structure -> WHILE PAR_START condition PAR_END ACOL_START programme ACOL_END .)
    $end            reduce using rule 19 (structure -> WHILE PAR_START condition PAR_END ACOL_START programme ACOL_END .)
    ACOL_END        reduce using rule 19 (structure -> WHILE PAR_START condition PAR_END ACOL_START programme ACOL_END .)


state 67

    (20) structure -> IF PAR_START condition PAR_END ACOL_START programme ACOL_END .

    DOTCOMMA        reduce using rule 20 (structure -> IF PAR_START condition PAR_END ACOL_START programme ACOL_END .)
    $end            reduce using rule 20 (structure -> IF PAR_START condition PAR_END ACOL_START programme ACOL_END .)
    ACOL_END        reduce using rule 20 (structure -> IF PAR_START condition PAR_END ACOL_START programme ACOL_END .)


state 68

    (14) square -> SQUARE PAR_START expression COMMA expression COMMA expression . COMMA expression PAR_END
    (15) square -> SQUARE PAR_START expression COMMA expression COMMA expression . COMMA expression COMMA expression PAR_END
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    COMMA           shift and go to state 72
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 69

    (16) pyramid -> PYRAMID PAR_START expression COMMA expression COMMA expression . COMMA expression PAR_END
    (17) pyramid -> PYRAMID PAR_START expression COMMA expression COMMA expression . COMMA expression COMMA expression PAR_END
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    COMMA           shift and go to state 73
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 70

    (11) randomShape -> XS PAR_START expression COMMA expression COMMA expression . COMMA expression PAR_END
    (12) randomShape -> XS PAR_START expression COMMA expression COMMA expression . COMMA expression COMMA expression PAR_END
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    COMMA           shift and go to state 74
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 71

    (18) color -> COLOR PAR_START expression COMMA expression COMMA expression . COMMA expression PAR_END
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    COMMA           shift and go to state 75
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 72

    (14) square -> SQUARE PAR_START expression COMMA expression COMMA expression COMMA . expression PAR_END
    (15) square -> SQUARE PAR_START expression COMMA expression COMMA expression COMMA . expression COMMA expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 76

state 73

    (16) pyramid -> PYRAMID PAR_START expression COMMA expression COMMA expression COMMA . expression PAR_END
    (17) pyramid -> PYRAMID PAR_START expression COMMA expression COMMA expression COMMA . expression COMMA expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 77

state 74

    (11) randomShape -> XS PAR_START expression COMMA expression COMMA expression COMMA . expression PAR_END
    (12) randomShape -> XS PAR_START expression COMMA expression COMMA expression COMMA . expression COMMA expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 78

state 75

    (18) color -> COLOR PAR_START expression COMMA expression COMMA expression COMMA . expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 79

state 76

    (14) square -> SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression . PAR_END
    (15) square -> SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression . COMMA expression PAR_END
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    PAR_END         shift and go to state 81
    COMMA           shift and go to state 80
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 77

    (16) pyramid -> PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression . PAR_END
    (17) pyramid -> PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression . COMMA expression PAR_END
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    PAR_END         shift and go to state 83
    COMMA           shift and go to state 82
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 78

    (11) randomShape -> XS PAR_START expression COMMA expression COMMA expression COMMA expression . PAR_END
    (12) randomShape -> XS PAR_START expression COMMA expression COMMA expression COMMA expression . COMMA expression PAR_END
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    PAR_END         shift and go to state 85
    COMMA           shift and go to state 84
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 79

    (18) color -> COLOR PAR_START expression COMMA expression COMMA expression COMMA expression . PAR_END
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    PAR_END         shift and go to state 86
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 80

    (15) square -> SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression COMMA . expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 87

state 81

    (14) square -> SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END .

    DOTCOMMA        reduce using rule 14 (square -> SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END .)
    $end            reduce using rule 14 (square -> SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END .)
    ACOL_END        reduce using rule 14 (square -> SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END .)


state 82

    (17) pyramid -> PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression COMMA . expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 88

state 83

    (16) pyramid -> PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END .

    DOTCOMMA        reduce using rule 16 (pyramid -> PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END .)
    $end            reduce using rule 16 (pyramid -> PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END .)
    ACOL_END        reduce using rule 16 (pyramid -> PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END .)


state 84

    (12) randomShape -> XS PAR_START expression COMMA expression COMMA expression COMMA expression COMMA . expression PAR_END
    (22) expression -> . IDENTIFIER ADD_OP UNDERSCORE ADD_OP
    (23) expression -> . expression ADD_OP expression
    (24) expression -> . expression MUL_OP expression
    (25) expression -> . ADD_OP expression
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 32
    ADD_OP          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 89

state 85

    (11) randomShape -> XS PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END .

    DOTCOMMA        reduce using rule 11 (randomShape -> XS PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END .)
    $end            reduce using rule 11 (randomShape -> XS PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END .)
    ACOL_END        reduce using rule 11 (randomShape -> XS PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END .)


state 86

    (18) color -> COLOR PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END .

    DOTCOMMA        reduce using rule 18 (color -> COLOR PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END .)
    $end            reduce using rule 18 (color -> COLOR PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END .)
    ACOL_END        reduce using rule 18 (color -> COLOR PAR_START expression COMMA expression COMMA expression COMMA expression PAR_END .)


state 87

    (15) square -> SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression . PAR_END
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    PAR_END         shift and go to state 90
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 88

    (17) pyramid -> PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression . PAR_END
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    PAR_END         shift and go to state 91
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 89

    (12) randomShape -> XS PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression . PAR_END
    (23) expression -> expression . ADD_OP expression
    (24) expression -> expression . MUL_OP expression

    PAR_END         shift and go to state 92
    ADD_OP          shift and go to state 21
    MUL_OP          shift and go to state 22


state 90

    (15) square -> SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END .

    DOTCOMMA        reduce using rule 15 (square -> SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END .)
    $end            reduce using rule 15 (square -> SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END .)
    ACOL_END        reduce using rule 15 (square -> SQUARE PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END .)


state 91

    (17) pyramid -> PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END .

    DOTCOMMA        reduce using rule 17 (pyramid -> PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END .)
    $end            reduce using rule 17 (pyramid -> PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END .)
    ACOL_END        reduce using rule 17 (pyramid -> PYRAMID PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END .)


state 92

    (12) randomShape -> XS PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END .

    DOTCOMMA        reduce using rule 12 (randomShape -> XS PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END .)
    $end            reduce using rule 12 (randomShape -> XS PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END .)
    ACOL_END        reduce using rule 12 (randomShape -> XS PAR_START expression COMMA expression COMMA expression COMMA expression COMMA expression PAR_END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ADD_OP in state 10 resolved as shift
WARNING: shift/reduce conflict for ADD_OP in state 32 resolved as shift
